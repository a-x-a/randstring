# Options for analysis running.
run:
  # Number of CPUs to use when running golangci-lint.
  # Default: the number of logical CPUs in the machine
  # concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: []
  # build-tags:
  #   - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path,
  # including the path prefix if one is set.
  # Default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []

  #skip-dirs:
  #  - src/external_libs
  #  - autogenerated_by_my_lib

  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true

  #skip-dirs-use-default: false

  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # There is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not, please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []

  #skip-files:
  #  - ".*\\.my\\.go$"
  #  - lib/bad.go

  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false, golangci-lint acquires file lock on start.
  # Default: false
  allow-parallel-runners: true
  # Allow multiple golangci-lint instances running, but serialize them around a lock.
  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.
  # Default: false
  allow-serial-runners: true
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17
  go: "1.22"
  # Show statistics per linter.
  # Default: false
  # show-stats: true

# output configuration options
output:
  # Format: colored-line-number|line-number|json|colored-tab|tab|checkstyle|code-climate|junit-xml|github-actions|teamcity
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.xml,json:stdout,colored-line-number"
  #
  # Default: colored-line-number
  # format: "colored-line-number:stdout,github-actions"
  # Print lines of code with issue.
  # Default: true
  # print-issued-lines: false
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: false
  # Make issues output unique by line.
  # Default: true
  # uniq-by-line: false
  # Add a prefix to the output file references.
  # Default: ""
  path-prefix: ""
  # Sort results by: filepath, line and column.
  # Default: false
  sort-results: true
linters:
  # # Disable all linters.
  # # Default: false
  # disable-all: true
  # # Enable specific linter
  # # https://golangci-lint.run/usage/linters/#enabled-by-default
  # enable:
  # # Enable all available linters.
  # # Default: false
  enable-all: true
  # # Disable specific linter
  # # https://golangci-lint.run/usage/linters/#disabled-by-default
  disable:
    #   - asasalint
    #   - asciicheck
    #   - bidichk
    #   - bodyclose
    #   - containedctx
    #   - contextcheck
    #   - cyclop
    #   - deadcode
    #   - decorder
    - depguard
    #   - dogsled
    #   - dupl
    #   - dupword
    #   - durationcheck
    # - errcheck
    # - errchkjson
    # - errname
    # - errorlint
    #   - execinquery
    #   - exhaustive
    - exhaustivestruct
    - exhaustruct
    #   - exportloopref
    #   - forbidigo
    - forcetypeassert
    # - funlen
    - gci
    #   - ginkgolinter
    #   - gocheckcompilerdirectives
    #   - gochecknoglobals
    #   - gochecknoinits
    #   - gochecksumtype
    #   - gocognit
    #   - goconst
    #   - gocritic
    #   - gocyclo
    #   - godot
    #   - godox
    #   - goerr113
    # - gofmt
    - gofumpt
    #   - goheader
    - goimports
    - golint
    # - gomnd
    #   - gomoddirectives
    #   - gomodguard
    #   - goprintffuncname
    - gosec
    #   - gosimple
    #   - gosmopolitan
    #   - govet
    #   - grouper
    - ifshort
    #   - importas
    #   - inamedparam
    #   - ineffassign
    #   - interfacebloat
    #   - interfacer
    #   - ireturn
    - lll
    #   - loggercheck
    #   - maintidx
    #   - makezero
    #   - maligned
    #   - mirror
    #   - misspell
    #   - musttag
    #   - nakedret
    #   - nestif
    #   - nilerr
    #   - nilnil
    - nlreturn
    #   - noctx
    #   - nolintlint
    #   - nonamedreturns
    - nosnakecase
    #   - nosprintfhostport
    #   - paralleltest
    #   - perfsprint
    #   - prealloc
    #   - predeclared
    #   - promlinter
    #   - protogetter
    #   - reassign
    #   - revive
    #   - rowserrcheck
    - scopelint
    #   - sloglint
    #   - spancheck
    #   - sqlclosecheck
    #   - staticcheck
    #   - structcheck
    #   - stylecheck
    #   - tagalign
    - tagliatelle
    #   - tenv
    #   - testableexamples
    #   - testifylint
    #   - testpackage
    #   - thelper
    #   - tparallel
    #   - typecheck
    #   - unconvert
    #   - unparam
    #   - unused
    #   - usestdlibvars
    #   - varcheck
    #   - varnamelen
    #   - wastedassign
    #   - whitespace
    - wrapcheck
    - wsl
  #   - zerologlint
  # # Enable presets.
  # # https://golangci-lint.run/usage/linters
  # # Default: []
  # presets:
  #   - bugs
  #   - comment
  #   - complexity
  #   - error
  #   - format
  #   - import
  #   - metalinter
  #   - module
  #   - performance
  #   - sql
  #   - style
  #   - test
  #   - unused
  # # Enable only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: true

linters-settings:
  # gci:
  #   # DEPRECATED: use `sections` and `prefix(github.com/org/project)` instead.
  #   local-prefixes: github.com/a-x-a
  #   # Section configuration to compare against.
  #   # Section names are case-insensitive and may contain parameters in ().
  #   # The default order of sections is `standard > default > custom > blank > dot > alias`,
  #   # If `custom-order` is `true`, it follows the order of `sections` option.
  #   # Default: ["standard", "default"]
  #   sections:
  #     - standard # Standard section: captures all standard packages.
  #     - default # Default section: contains all imports that could not be matched to another section type.
  #     - prefix(github.com/a-x-a) # Custom section: groups all imports with the specified Prefix.
  #     - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
  #     - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
  #     - alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
  #   # Skip generated files.
  #   # Default: true
  #   skip-generated: false
  #   # Enable custom order of sections.
  #   # If `true`, make the section order the same as the order of `sections`.
  #   # Default: false
  #   custom-order: true

  goimports:
    local-prefixes: github.com/a-x-a

  # gomnd:
  #   # don't include the "operation" and "assign"
  #   checks:
  #     - argument
  #     - case
  #     - condition
  #     - return
  #   ignored-numbers:
  #     - "0"
  #     - "1"
  #     - "2"
  #     - "3"
  #     - "4"
  #     - "5"
  #     - "6"
  #     - "7"
  #     - "8"
  #     - "9"
  #     - "300"
  #     - "0600"
  #     - "10"
  #     - "15"
  #     - "30"
  #     - "1024"
  #   ignored-functions:
  #     - strings.SplitN
  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    # Default: 5
    max-distance: 6
    # The minimum length of a variable's name that is considered "long".
    # Variable names that are at least this long will be ignored.
    # Default: 3
    min-name-length: 1
    # Check method receivers.
    # Default: false
    check-receiver: true
    # Check named return values.
    # Default: false
    check-return: true
    # Check type parameters.
    # Default: false
    check-type-param: true
    # Ignore "ok" variables that hold the bool return value of a type assertion.
    # Default: false
    ignore-type-assert-ok: true
    # Ignore "ok" variables that hold the bool return value of a map index.
    # Default: false
    ignore-map-index-ok: true
    # Ignore "ok" variables that hold the bool return value of a channel receive.
    # Default: false
    ignore-chan-recv-ok: true
    # Optional list of variable names that should be ignored completely.
    # Default: []
    ignore-names:
      - err
    # Optional list of variable declarations that should be ignored completely.
    # Entries must be in one of the following forms (see below for examples):
    # - for variables, parameters, named return values, method receivers, or type parameters:
    #   <name> <type>  (<type> can also be a pointer/slice/map/chan/...)
    # - for constants: const <name>
    #
    # Default: []
    ignore-decls:
      - c echo.Context
      - t testing.T
      - f *foo.Bar
      - e error
      - i int
      - const C
      - T any
      - m map[string]int

  revive:
    # Maximum number of open files at the same time.
    # See https://github.com/mgechev/revive#command-line-flags
    # Defaults to unlimited.
    max-open-files: 2048
    # When set to false, ignores files with "GENERATED" header, similar to golint.
    # See https://github.com/mgechev/revive#available-rules for details.
    # Default: false
    ignore-generated-header: true
    # Sets the default severity.
    # See https://github.com/mgechev/revive#configuration
    # Default: warning
    severity: error
    # Enable all available rules.
    # Default: false
    enable-all-rules: true
    # Sets the default failure confidence.
    # This means that linting errors with less than 0.8 confidence will be ignored.
    # Default: 0.8
    # confidence: 0.1
    rules:
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#add-constant
      - name: add-constant
        severity: warning
        disabled: false
        arguments:
          - maxLitCount: "3"
            allowStrs: '""'
            allowInts: "0,1,2"
            allowFloats: "0.0,0.,1.0,1.,2.0,2."
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#blank-imports
      - name: blank-imports
        severity: warning
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cognitive-complexity
      - name: cognitive-complexity
        severity: warning
        disabled: false
        arguments: [8]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#line-length-limit
      - name: line-length-limit
        severity: warning
        disabled: false
        arguments: [180]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-return
      - name: unexported-return
        severity: warning
        disabled: true
  interfacebloat:
    # The maximum number of methods allowed for an interface.
    # Default: 10
    max: 15
  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: 90
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    # statements: -1
    # Ignore comments when counting lines.
    # Default false
    ignore-comments: true
